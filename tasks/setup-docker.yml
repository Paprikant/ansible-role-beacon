---
# Install docker on RHEL based systems
# 
# See https://docs.docker.com/engine/install/rhel/ for more info

- name: Add yum repository for docker
  when: ansible_os_family == "RedHat"
  ansible.builtin.yum_repository:
    name: docker
    description: official docker packages
    file: docker
    baseurl: https://download.docker.com/linux/centos/$releasever/$basearch/stable
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg

- name: Ensure old yum packages are absent
  when: ansible_os_family == "RedHat"
  ansible.builtin.yum:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
      - podman
      - buildah

- name: Install docker via yum
  when: ansible_os_family == "RedHat"
  ansible.builtin.yum:
    name: "{{ packages }}"
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin

# Install docker on Debian based systems
# 
# See https://docs.docker.com/engine/install/rhel/ for more info


- name: Install ansible playbook requirements
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - gnupg
      - ca-certificates # is required for 
      - python3-requests # is required to run community.docker collection tasks 

- name: Add signing key used by apt repositories
  when: ansible_os_family == "Debian"
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    state: present

- name: Add apt repository for docker
  when: ansible_os_family == "Debian"
  ansible.builtin.apt_repository:
      repo: deb https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
      state: present

- name: Ensure old apt packages are absent
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: absent
  vars:
    packages:
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
      - podman
      - buildah

- name: Install docker via apt
  when: ansible_os_family == "Debian"
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose-plugin

# Make sure docker is started and enabled
- name: Ensure docker is running
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: docker
